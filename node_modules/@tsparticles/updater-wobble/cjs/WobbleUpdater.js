"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WobbleUpdater = void 0;
const engine_1 = require("@tsparticles/engine");
const Wobble_js_1 = require("./Options/Classes/Wobble.js");
const Utils_js_1 = require("./Utils.js");
class WobbleUpdater {
    constructor(container) {
        this.container = container;
    }
    init(particle) {
        const wobbleOpt = particle.options.wobble;
        if (wobbleOpt?.enable) {
            particle.wobble = {
                angle: (0, engine_1.getRandom)() * Math.PI * 2,
                angleSpeed: (0, engine_1.getRangeValue)(wobbleOpt.speed.angle) / 360,
                moveSpeed: (0, engine_1.getRangeValue)(wobbleOpt.speed.move) / 10,
            };
        }
        else {
            particle.wobble = {
                angle: 0,
                angleSpeed: 0,
                moveSpeed: 0,
            };
        }
        particle.retina.wobbleDistance = (0, engine_1.getRangeValue)(wobbleOpt?.distance ?? 0) * this.container.retina.pixelRatio;
    }
    isEnabled(particle) {
        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;
    }
    loadOptions(options, ...sources) {
        if (!options.wobble) {
            options.wobble = new Wobble_js_1.Wobble();
        }
        for (const source of sources) {
            options.wobble.load(source?.wobble);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, Utils_js_1.updateWobble)(particle, delta);
    }
}
exports.WobbleUpdater = WobbleUpdater;
