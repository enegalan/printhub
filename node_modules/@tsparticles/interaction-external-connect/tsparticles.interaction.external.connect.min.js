/*! For license information please see tsparticles.interaction.external.connect.min.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],e);else{var n="object"==typeof exports?e(require("@tsparticles/engine")):e(t.window);for(var o in n)("object"==typeof exports?exports:t)[o]=n[o]}}(this,(t=>(()=>{"use strict";var e={533:e=>{e.exports=t}},n={};function o(t){var i=n[t];if(void 0!==i)return i.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,o),r.exports}o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{o.r(i),o.d(i,{Connect:()=>n,ConnectLinks:()=>e,loadExternalConnectInteraction:()=>c});var t=o(533);class e{constructor(){this.opacity=.5}load(t){t&&void 0!==t.opacity&&(this.opacity=t.opacity)}}class n{constructor(){this.distance=80,this.links=new e,this.radius=60}load(t){t&&(void 0!==t.distance&&(this.distance=t.distance),this.links.load(t.links),void 0!==t.radius&&(this.radius=t.radius))}}function r(e,n,o,i){const r=e.actualOptions.interactivity.modes.connect;if(r)return function(e,n,o,i){const r=Math.floor(o.getRadius()/n.getRadius()),a=n.getFillColor(),s=o.getFillColor();if(!a||!s)return;const c=n.getPosition(),d=o.getPosition(),l=(0,t.colorMix)(a,s,n.getRadius(),o.getRadius()),u=e.createLinearGradient(c.x,c.y,d.x,d.y);return u.addColorStop(0,(0,t.getStyleFromHsl)(a,i)),u.addColorStop(r>1?1:r,(0,t.getStyleFromRgb)(l,i)),u.addColorStop(1,(0,t.getStyleFromHsl)(s,i)),u}(n,o,i,r.links.opacity)}function a(e,n,o){e.canvas.draw((i=>{const a=r(e,i,n,o);if(!a)return;const s=n.getPosition(),c=o.getPosition();!function(e,n,o,i,r){(0,t.drawLine)(e,i,r),e.lineWidth=n,e.strokeStyle=o,e.stroke()}(i,n.retina.linksWidth??0,a,s,c)}))}class s extends t.ExternalInteractorBase{constructor(t){super(t)}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.connect;e&&(t.retina.connectModeDistance=e.distance*t.retina.pixelRatio,t.retina.connectModeRadius=e.radius*t.retina.pixelRatio)}async interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&"pointermove"===t.interactivity.status){const e=t.interactivity.mouse.position;if(!t.retina.connectModeDistance||t.retina.connectModeDistance<0||!t.retina.connectModeRadius||t.retina.connectModeRadius<0||!e)return;const n=Math.abs(t.retina.connectModeRadius),o=t.particles.quadTree.queryCircle(e,n,(t=>this.isEnabled(t)));let i=0;for(const e of o){const n=e.getPosition();for(const r of o.slice(i+1)){const o=r.getPosition(),i=Math.abs(t.retina.connectModeDistance),s=Math.abs(n.x-o.x),c=Math.abs(n.y-o.y);s<i&&c<i&&a(t,e,r)}++i}}}isEnabled(e){const n=this.container,o=n.interactivity.mouse,i=(e?.interactivity??n.actualOptions.interactivity).events;return!(!i.onHover.enable||!o.position)&&(0,t.isInArray)("connect",i.onHover.mode)}loadModeOptions(t,...e){t.connect||(t.connect=new n);for(const n of e)t.connect.load(n?.connect)}reset(){}}async function c(t,e=!0){await t.addInteractor("externalConnect",(t=>new s(t)),e)}})(),i})()));